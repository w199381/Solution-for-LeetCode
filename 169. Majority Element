/* Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2  */

public class Solution {
    public int MajorityElement(int[] nums) {
        if(nums.Length <= 1)
            return nums[0];
        if(nums == null)
            return 0;
        int calculator = 1;
        Array.Sort(nums);
        for(int i =0; i<nums.Length-1; i++)
        {           
            if(nums[i] == nums[i+1])
            {
                calculator += 1;
            }
            else
                calculator = 1;
            while(calculator > nums.Length/2)
            {
                return nums[i];
            }
        }
        return 0;
    }
}

